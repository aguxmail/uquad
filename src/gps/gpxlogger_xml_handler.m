function [easting, northing, elevation, utmzone, sat] = ... 
  gpxlogger_xml_handler(in, force_plot)
% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
% function [easting, northing, elevation, utmzone, sat] = ... 
%   gpxlogger_xml_handler(in, force_plot)
%
% Reads data from a log file generated by gpxlogger.
% These logs are in LAT/LON, this function will convert to UTM.
%
% If no output is supplied, then a plot is generated.
%
% Inputs:
%   - in: path to xml file or xml_struct.
%   - force_plot: Plot data (even if outputs are supplied)
%
% Outputs:
%   - easting, northing: Coordinates in UTM
%   - elevation: Elevation in meters.
%   - utmzone: See deg2utm.m
%   - sat: # of satelites used (-1 if data unavailable)
%
% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if(nargin < 1)
  error('Not enough inputs!');
end
if(nargin < 2)
  force_plot = 0;
end

if(ischar(in))
  fprintf('Loading xml file into struct, this may take a minute...\n')
  xs = xmltools(in);
else
  fprintf('Using input struct\n')
  xs = in;
end

fprintf('xml parsing completed, retrieving data...\n')

version_node = xs.child(2).attribs(1);
if(~strcmp(version_node.name, 'VERSION') || ...
    (~strcmp(version_node.value, '1.1')))
  lastwarn('gpxlogger version not supported!')
end

packet_count = size(xs.child(2).child(2).child(2).child,2);
lat = zeros(packet_count,1);
lon = zeros(packet_count,1);
sat = zeros(packet_count,1);
elevation = zeros(packet_count,1);
for trkpt_i=1:packet_count
  curr = xs.child(2).child(2).child(2).child(trkpt_i);
  lat(trkpt_i) = str2double(curr.attribs(1).value);
  lon(trkpt_i) = str2double(curr.attribs(2).value);
  elevation(trkpt_i) = str2double(curr.child(1).value);
  if (size(curr.child,2) >= 8)
    sat(trkpt_i) = str2double(curr.child(5).value);
  else
    % sat count is not always logged
    sat(trkpt_i) = -1;
  end
end
[easting, northing, utmzone] = deg2utm(lat, lon);


fprintf('Success!\n')

if(nargout == 0 || force_plot)
  fprintf('Generating plot...\n')
  gps_plot3(easting,northing,elevation, sat);
end
